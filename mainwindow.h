#ifndef MAINWINDOW_H
#define MAINWINDOW_H

#include <QGraphicsItem>
#include "architechtes.h"  // Ensure this file exists and contains the Architecte class
#include <QMainWindow>
#include <QTableWidget>
#include <QtCharts/QChartView>  // Include the necessary Qt Charts header
#include <QtCharts/QPieSeries>
#include <QtCharts/QPieSlice>
#include <QtCharts/QBarSeries>
#include <QtCharts/QBarSet>
#include <QtCharts/QChart>
#include "dialog.h"  // Include your login dialog


QT_BEGIN_NAMESPACE
namespace Ui { class MainWindow; }
QT_END_NAMESPACE

class MainWindow : public QMainWindow
{
    Q_OBJECT

public:
   explicit MainWindow(QWidget *parent = nullptr, const QString &userRole = "");
   ~MainWindow();

    // Slot functions for buttons and interactions
    void on_addEmployeeButton_clicked();
    void on_supprimerEmploye_clicked();
    void on_refreshButton_clicked();
    void on_refreshButton2_clicked();
    void on_modifyEmployeeButton_clicked();
    void on_pdf_2_clicked();


private:
    Ui::MainWindow *ui;  // UI pointer generated by Qt's UI designer
    Architecte emp;  // Architecte object to manage employee data and logic
    void on_tableWidget_itemClicked(QTableWidgetItem *item);
    void refreshTableWidget();
    void fillTableWidget();
    void displayCongeStatistics();  // Declare the function here
     Architecte architecte;
     void on_rechercherButton_clicked();
         QString m_userRole;
         void setupTabsBasedOnRole(); // DÃ©claration de la nouvelle fonction
         bool isAscending = true; // Track sorting order
         bool customTableWidgetItemCompare(QTableWidgetItem* item1, QTableWidgetItem* item2);
             QSqlQueryModel* currentCongeModel;
             //    QSqlDatabase db;




private slots:
    void on_comboBox_tri_3_currentIndexChanged(int index);
    void on_triCb_currentIndexChanged(int index);
    void on_triButton_clicked();
    void on_tableWidget_sortIndicatorChanged(int logicalIndex, Qt::SortOrder order);
    void populateEmployeeInfo();
    void on_soumettreButton_clicked();
   void onSelectionChanged(const QItemSelection &selected, const QItemSelection &deselected);
        void refreshTableView();
        void on_acceptation_clicked();  // Doit correspondre exactement au nom de l'objet UI
            void on_refuser_clicked();
            void on_statConge_clicked();
    void onLoginClicked();  // Slot for login button
    //void afficherConges(const QDate &date);


};

#endif // MAINWINDOW_H
